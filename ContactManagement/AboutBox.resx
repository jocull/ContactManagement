<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhfQB8APcAAAAAAP////75+h4cHRkXGTMyM318fcC/wBMKFPz8/0NDRAYSHgQNFQI1XrvN2Zim
        sAFAaQIhNR1PcDhifEd3lZm1x4meq6nAz8vZ4myUq22Cjn+SnVd0g9fl7OHs8Pr9/vf7/PH29+j2+P3/
        /xAQCpeXgdTUtvz85BMTEv7+8///+U5OTf///WZmZf7+/f39/PHx8Ovr6sXFxLq6uZCQj4qKiYSEg+7t
        zaalkd/extXUxOfm1vTz5Pz77UlHNIuJdLSyoMTCr4B8bGJeUXNuX+fm5d7d3NnY1wUEBCUkJCwrKzs6
        Ov/9/XV0dPr5+fj39/b19fTz89PS0rW0tJ+env7+/vv7++7u7uLi4s7OzsrKyq2traWlpZmZmZSUlGxs
        bF9fX1dXVw4ODgkJCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACwAAAAAfQB8AAAI/wB3CBxIsKDBgwgTKlzIsKHDhxAjSpxIsaLFixgzatzIsaNCLQ+keBxJ0iGPHChR
        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
</value>
  </data>
</root>